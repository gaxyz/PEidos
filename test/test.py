#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jul 22 19:43:41 2020

@author: gaston
"""
# Only for IPython
# sys.path.append("/home/gaston/projects/maestria/PEidos/")

import os
import sys
import glob
from pathlib import Path

sys.path.insert( 0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from peidos import trees 
from peidos import simulations as sim
from peidos import utils as utils


# Read tree from file


tree = trees.read_tree("serial_splits.nwk", 1800)

# Simulation config dict
config_dict ={
    "mutation_rate":1e-7,
    "recombination_rate":1e-8,
    "genome_size":999999,
    "burnin_time":1800,
    "pop_size_filename":"pop_sizes.txt",
    "simulation_popsize":200,
    "output_sample_size":50,
    "pulse_destination": "p3" ,
    "pulse_source": "p5",
    "pulse_rate": 0.5,
    "pulse_generation": 1920 ,
    "post_admixture_time": 10 ,
    }

# Define final script name
script_file = "serial_splits.slim"
# TREELIKE NEUTRAL
#sim.treelike_neutral(tree,config_dict,script_file)
# MIGRATION PULSE 
sim.migration_pulse_neutral(tree, config_dict, script_file)


# Define seed and basename (creates a directory)
seed = 2020
tag = "testing"
# Run simulation in directory
sim.slimsim(script_file, seed,".",tag)



# Get path for simulation directory
testPath = Path(tag+"_"+str(seed))

# Search for vcf generated by SLiM
population_vcfs = glob.glob( str(testPath / "p*.vcf"))
# Define path to merged vcf output
merged_vcf = testPath / "genotypes.vcf"
# Merge vcfs
utils.merge_vcf(population_vcfs, str(merged_vcf) )
# Define plink prefix
plink_prefix = testPath / "genotypes"
# Convert to plink
utils.vcf_to_bed(str(merged_vcf), str(plink_prefix) )



# Define parameters for hapflk

hapflk_d = {
    "ncpu":3,
    "reynold_snps": 1500,
    "nfit": 3,
    "K": 5
    }

# Run hapflk  
hapflk_prefix = testPath / "hapflk"
utils.run_hapFLK( str(plink_prefix),str(hapflk_prefix), hapflk_d )




















